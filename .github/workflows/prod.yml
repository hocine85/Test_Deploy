# Working WorkFlow - using environment secrets - notice secrets are retrieved under the [publish-uipath-nuget-package] Job

name: Production WorkFlow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events on the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  print-details:
    runs-on: ubuntu-latest
    steps:
      - name: echo-default-env-variables
        run: |
          echo "Home: ${HOME}"
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "GITHUB_REF: ${GITHUB_REF}"
  cleaner:
    runs-on: ubuntu-latest
    steps:
      - name: Runner workspace path
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"
  # Build Package
  build-uipath-nuget-package :
    needs: cleaner
    runs-on : windows-latest
    steps:
      - name: Check out repository code
        # Checks-out the repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2
      - name: Build Nuget Package
        shell: pwsh
        #packs the checked out repo into a nuget package
        run: ${{ github.workspace }}\scripts\UiPathPack.ps1 ${{ github.workspace }}\project.json -destination_folder ${{ github.workspace }}\package
        # Saving Artifacts
      - name: Upload UiPath Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: |
           package/*.*
           scripts/*.ps1
      # Publish
  publish-uipath-nuget-package:
      needs: build-uipath-nuget-package
      runs-on: windows-latest
      # points to the prod environment within github actions
      environment: Prod
      env:
      # assign env variable from github production environment secrets
        ORCH_URL: ${{ secrets.UIPATH_ORCHESTRATOR_URL }}
        ORCH_TENANT: ${{ secrets.UIPATH_ORCHESTRATOR_TENANT }}
        ORCH_CLIENT_ID: ${{ secrets.UIPATH_CLIENT_ID }}
        ORCH_USER_KEY: ${{ secrets.UIPATH_USERKEY }}
        ORCH_ACC_NAME: ${{ secrets.UIPATH_ORCHESTRATOR_ACCOUNT_NAME }}
      steps:
           #download the artifacts
      - name: Download UiPath Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Artifacts
      - name: Publish Nuget Package to Production
        shell: pwsh
        #deploy the previously packed nuget package.
        run: ${{ github.workspace }}\scripts\UiPathDeploy.ps1 ${{ github.workspace }}\package ${{env.ORCH_URL}} ${{env.ORCH_TENANT}} -UserKey ${{env.ORCH_USER_KEY}} -account_name ${{env.ORCH_ACC_NAME}}